{"version":3,"names":[],"mappings":"","sources":["scripts.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar theme = _interopRequireWildcard(require(\"./theme-switcher/theme-switcher\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction closeAllMaskComponents() {\n  var objClasses = ['off-menu', 'mask'];\n  objClasses.forEach(function (obj) {\n    document.querySelector(\".\".concat(obj)).classList.remove('root-block');\n    document.querySelector(\".\".concat(obj)).classList.add('root-hidden');\n  });\n}\n\nfunction removeOffMenuOnMaskClick(evt) {\n  var paths = evt.composedPath();\n  var clickedOnMask = false;\n\n  for (var i = 0; i < paths.length; i++) {\n    if (paths[i] && paths[i].classList && paths[i].classList.contains('mask')) {\n      clickedOnMask = true;\n      break;\n    }\n  }\n\n  if (clickedOnMask) {\n    closeAllMaskComponents();\n  }\n}\n\nfunction documentClickEvt() {\n  document.addEventListener('click', function (evt) {\n    theme.closeThemeSwitcherIfClickedOutside(evt);\n    removeOffMenuOnMaskClick(evt);\n  });\n}\n\nfunction copyThemeSwitcherToOffMenu() {\n  var currWidth = window.innerWidth;\n  var themeTogglerHolder = document.querySelector('.theme-toggler-holder');\n  var themeToggler = document.querySelector('.theme-toggler');\n  var offMenuItem = document.querySelector('.theme-switcher-off-menu-holder');\n\n  if (themeTogglerHolder && themeToggler && offMenuItem) {\n    var isInsideMainSpace = themeToggler.parentElement.classList.contains('theme-toggler-holder');\n\n    if (isInsideMainSpace) {\n      if (currWidth <= 640) {\n        offMenuItem.appendChild(themeToggler);\n      }\n    } else {\n      if (currWidth > 640) {\n        themeTogglerHolder.appendChild(themeToggler);\n      }\n    }\n  }\n}\n\nfunction closeOffMenu() {\n  var obj = document.querySelector('.off-menu-close > button');\n  obj.addEventListener('click', function () {\n    document.querySelector('.off-menu').classList.add('root-hidden');\n    document.querySelector('.mask').classList.add('root-hidden');\n    document.querySelector('.mask').classList.remove('root-block');\n  });\n}\n\nfunction showOffMenu() {\n  var obj = document.querySelector('.off-menu-show > button');\n  obj.addEventListener('click', function () {\n    document.querySelector('.off-menu').classList.remove('root-hidden');\n    document.querySelector('.mask').classList.remove('root-hidden');\n    document.querySelector('.mask').classList.add('root-block');\n  });\n}\n\nfunction getAllChildren(obj) {\n  if (obj.children.length === 0) {\n    return [];\n  }\n\n  var children = Array.from(obj.children);\n  children.forEach(function (child) {\n    children.push.apply(children, _toConsumableArray(getAllChildren(child)));\n  });\n  return children;\n}\n\nfunction removeAriaHiddenOnSmallScreen() {\n  var width = window.innerWidth;\n  var objs = document.querySelectorAll('.sm-aria-show');\n  objs.forEach(function (obj) {\n    if (width <= 640) {\n      obj.removeAttribute('aria-hidden');\n      var children = getAllChildren(obj);\n      children.forEach(function (child) {\n        child.removeAttribute('aria-hidden');\n      });\n    } else {\n      obj.setAttribute('aria-hidden', 'true');\n\n      var _children = getAllChildren(obj);\n\n      _children.forEach(function (child) {\n        child.setAttribute('aria-hidden', 'true');\n      });\n    }\n  });\n}\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  theme.onloadFns();\n  documentClickEvt();\n  copyThemeSwitcherToOffMenu();\n  closeOffMenu();\n  showOffMenu();\n  removeAriaHiddenOnSmallScreen();\n});\nwindow.addEventListener('resize', function () {\n  copyThemeSwitcherToOffMenu();\n  removeAriaHiddenOnSmallScreen();\n});\n\n},{\"./theme-switcher/theme-switcher\":2}],2:[function(require,module,exports){\n'use strict';\n\nfunction themeSwitcherOptionsHtml() {\n  return {\n    system: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-6 w-6 inline-block\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\\\"/>\\n</svg>\\n<span class=\\\"inline-block ml-1\\\">System Default</span>\",\n    light: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-6 w-6 inline-block\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\\\" />\\n</svg>\\n<span class=\\\"inline-block ml-1\\\">Light Theme</span>\",\n    dark: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-6 w-6 inline-block\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\\\" />\\n</svg>\\n<span class=\\\"inline-block ml-1\\\">Dark Theme</span>\"\n  };\n}\n\nfunction expandCollapseThemeOptions() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (['expand', 'collapse'].indexOf(action) === -1) {\n    return;\n  }\n\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n  var themeSwitcherOptions = document.querySelector('.theme-switcher-options');\n  var final_action = action !== '' ? action.toLowerCase() : '';\n\n  if (themeSwitcherBtn && themeSwitcherOptions) {\n    if (action === '') {\n      if (themeSwitcherOptions.classList.contains('expanded')) {\n        final_action = 'collapse';\n      } else {\n        final_action = 'expand';\n      }\n    }\n  }\n\n  if (final_action === 'expand') {\n    themeSwitcherOptions.classList.add('expanded');\n    themeSwitcherBtn.classList.add('theme-switcher-btn--active');\n    themeSwitcherBtn.setAttribute('aria-expanded', 'true');\n  } else {\n    themeSwitcherOptions.classList.remove('expanded');\n    themeSwitcherBtn.classList.remove('theme-switcher-btn--active');\n    themeSwitcherBtn.setAttribute('aria-expanded', 'false');\n  }\n\n  setActiveDescendantAriaOnUl(final_action);\n}\n\nfunction closeThemeSwitcherIfClickedOutside(evt) {\n  var paths = evt.composedPath();\n  var insideThemeToggler = false;\n\n  for (var i = 0; i < paths.length; i++) {\n    if (paths[i] && paths[i].classList && paths[i].classList.contains('theme-toggler')) {\n      insideThemeToggler = true;\n      break;\n    }\n  }\n\n  if (!insideThemeToggler) {\n    expandCollapseThemeOptions('collapse');\n  }\n}\n\nfunction initializeThemeMenuItems() {\n  var themeHtmls = themeSwitcherOptionsHtml();\n  var themeSwitcherLinks = document.querySelectorAll('.theme-switcher-list-item > .theme-switcher-link');\n\n  for (var i = 0; i < themeSwitcherLinks.length; i++) {\n    if (i === 0) {\n      themeSwitcherLinks[i].innerHTML = themeHtmls.light;\n    } else if (i === 1) {\n      themeSwitcherLinks[i].innerHTML = themeHtmls.dark;\n    } else if (i === 2) {\n      themeSwitcherLinks[i].innerHTML = themeHtmls.system;\n    }\n  }\n}\n\nfunction setActiveThemeLink(idx) {\n  var themeSwitcherItems = document.querySelectorAll('.theme-switcher-list-item');\n\n  for (var i = 0; i < themeSwitcherItems.length; i++) {\n    if (Number(idx) === i) {\n      themeSwitcherItems[i].classList.add('theme-switcher-list-item--active');\n      themeSwitcherItems[i].setAttribute('aria-selected', 'true');\n    } else {\n      themeSwitcherItems[i].classList.remove('theme-switcher-list-item--active');\n      themeSwitcherItems[i].removeAttribute('aria-selected');\n    }\n  }\n}\n\nfunction setActiveDescendantAriaOnUl() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (['expand', 'collapse'].indexOf(action) === -1) {\n    return;\n  }\n\n  var themeSwitcherOptions = document.querySelector('.theme-switcher-options');\n\n  if (action === 'collapse') {\n    themeSwitcherOptions.removeAttribute('aria-activedescendant');\n    return;\n  }\n\n  var themeSwitcherListActiveItem = document.querySelector('.theme-switcher-list-item--active');\n\n  if (themeSwitcherOptions && themeSwitcherListActiveItem) {\n    var activeId = themeSwitcherListActiveItem.id;\n    themeSwitcherOptions.setAttribute('aria-activedescendant', activeId);\n    setTimeout(function () {\n      themeSwitcherListActiveItem.focus();\n    });\n  } else {\n    themeSwitcherOptions.removeAttribute('aria-activedescendant');\n  }\n}\n\nfunction updateHtmlClass() {\n  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n  var systemTheme = '';\n\n  if (theme === 'system') {\n    systemTheme = getSystemColorScheme();\n  }\n\n  if (systemTheme === 'dark' || theme === 'dark') {\n    document.querySelector('html').classList.add('theme-dark');\n  } else {\n    document.querySelector('html').classList.remove('theme-dark');\n  }\n}\n\nfunction getSystemColorScheme() {\n  var darkPreferTheme = window.matchMedia('(prefers-color-scheme: dark)');\n  var hasDarkPreferTheme = typeof darkPreferTheme.matches === 'boolean';\n\n  if (hasDarkPreferTheme) {\n    return darkPreferTheme.matches ? 'dark' : 'light';\n  }\n\n  return 'light';\n}\n\nfunction focusOnSwitcherBtn() {\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n\n  if (themeSwitcherBtn) {\n    setTimeout(function () {\n      return themeSwitcherBtn.focus();\n    });\n  }\n}\n\nfunction handleChangeThemeEvt(idx) {\n  var collapse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (idx === 2) {\n    setTheme('system');\n  } else if (idx === 1) {\n    setTheme('dark');\n  } else {\n    setTheme('light');\n  }\n\n  if (collapse) {\n    expandCollapseThemeOptions('collapse');\n    focusOnSwitcherBtn();\n  }\n}\n\nfunction moveUpDownSwitcherOptions() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (['prev', 'next', 'home', 'end'].indexOf(option) === -1) {\n    return;\n  }\n\n  var switcherListOptions = document.querySelectorAll('.theme-switcher-list-item');\n  var currentActiveOption = document.activeElement;\n\n  if (option === 'home') {\n    switcherListOptions[0].focus();\n    handleChangeThemeEvt(0, false);\n  } else if (option === 'end') {\n    switcherListOptions[switcherListOptions.length - 1].focus();\n    handleChangeThemeEvt(switcherListOptions.length - 1, false);\n  } else if (currentActiveOption) {\n    for (var i = 0; i < switcherListOptions.length; i++) {\n      if (switcherListOptions[i] === currentActiveOption) {\n        if (option === 'prev') {\n          if (i === 0) {\n            switcherListOptions[switcherListOptions.length - 1].focus();\n            handleChangeThemeEvt(switcherListOptions.length - 1, false);\n          } else {\n            switcherListOptions[i - 1].focus();\n            handleChangeThemeEvt(i - 1, false);\n          }\n        } else {\n          if (i === switcherListOptions.length - 1) {\n            switcherListOptions[0].focus();\n            handleChangeThemeEvt(0, false);\n          } else {\n            switcherListOptions[i + 1].focus();\n            handleChangeThemeEvt(i + 1, false);\n          }\n        }\n\n        break;\n      }\n    }\n  }\n}\n\nfunction moveToSpecificSwitchOptionByKey(key) {\n  var keyVal = key.split('key').slice(-1)[0];\n  var switcherListOptions = document.querySelectorAll('.theme-switcher-list-item');\n\n  if (switcherListOptions.length > 0) {\n    var options = Array.from(switcherListOptions).map(function (opt) {\n      return opt.getAttribute('data-option');\n    });\n\n    for (var i = 0; i < options.length; i++) {\n      if (options[i] && options[i].startsWith(keyVal)) {\n        switcherListOptions[i].focus();\n        handleChangeThemeEvt(i, false);\n        break;\n      }\n    }\n  }\n}\n\nfunction handleThemeItemKeyboardCodes(key, idx) {\n  if (key === 'enter') {\n    handleChangeThemeEvt(idx);\n  } else if (key === 'escape') {\n    expandCollapseThemeOptions('collapse');\n    focusOnSwitcherBtn();\n  } else if (key === 'arrowup') {\n    moveUpDownSwitcherOptions('prev');\n  } else if (key === 'arrowdown') {\n    moveUpDownSwitcherOptions('next');\n  } else if (key === 'home' || key === 'end') {\n    moveUpDownSwitcherOptions(key);\n  } else {\n    moveToSpecificSwitchOptionByKey(key);\n  }\n}\n\nfunction handleSwitcherBtnKeyboardCodes(key) {\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n  var currentActiveThemeLink = document.querySelector('.theme-switcher-list-item--active');\n\n  if (key === 'enter') {\n    if (currentActiveThemeLink) {\n      setTimeout(function () {\n        return currentActiveThemeLink.focus();\n      });\n    }\n  } else if (key === 'arrowup') {\n    expandCollapseThemeOptions('expand');\n  } else if (key === 'arrowdown') {\n    expandCollapseThemeOptions('expand');\n  }\n}\n\nvar replaceLogo = function replaceLogo() {\n  var hasDarkTheme = document.querySelector('html').classList.contains('theme-dark');\n  var logoImgObj = document.querySelector('.site-logo');\n\n  if (logoImgObj) {\n    if (hasDarkTheme) {\n      logoImgObj.setAttribute('src', '/images/darklogo.svg');\n    } else {\n      logoImgObj.setAttribute('src', '/images/lightlogo.svg');\n    }\n  }\n};\n\nvar setTheme = function setTheme() {\n  var forced = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var themeHtmls = themeSwitcherOptionsHtml();\n  var theme = forced ? forced : window.localStorage.getItem('color-theme');\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n  initializeThemeMenuItems();\n\n  if (themeSwitcherBtn) {\n    if (theme.toString().toLowerCase() === 'system') {\n      themeSwitcherBtn.innerHTML = themeHtmls.system;\n      setActiveThemeLink(2);\n      updateHtmlClass('system');\n      window.localStorage.setItem('color-theme', 'system');\n      themeSwitcherBtn.setAttribute('aria-label', 'Using system default theme');\n    } else if (theme.toString().toLowerCase() === 'dark') {\n      themeSwitcherBtn.innerHTML = themeHtmls.dark;\n      setActiveThemeLink(1);\n      updateHtmlClass('dark');\n      window.localStorage.setItem('color-theme', 'dark');\n      themeSwitcherBtn.setAttribute('aria-label', 'Using dark theme');\n    } else {\n      themeSwitcherBtn.innerHTML = themeHtmls.light;\n      setActiveThemeLink(0);\n      updateHtmlClass('light');\n      window.localStorage.setItem('color-theme', 'light');\n      themeSwitcherBtn.setAttribute('aria-label', 'Using light theme');\n    }\n\n    replaceLogo();\n  }\n};\n\nvar changeThemeEvt = function changeThemeEvt() {\n  var items = document.querySelectorAll('.theme-switcher-list-item');\n\n  var _loop = function _loop(i) {\n    items[i].addEventListener('click', function (evt) {\n      handleChangeThemeEvt(i);\n    });\n  };\n\n  for (var i = 0; i < items.length; i++) {\n    _loop(i);\n  }\n};\n\nvar themeSwitcherBtnClickEvt = function themeSwitcherBtnClickEvt() {\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n\n  if (themeSwitcherBtn) {\n    themeSwitcherBtn.addEventListener('click', function () {\n      expandCollapseThemeOptions('expand');\n    });\n  }\n};\n\nvar themeSwitcherBtnKeydownEvt = function themeSwitcherBtnKeydownEvt() {\n  var themeSwitcherBtn = document.querySelector('.theme-switcher');\n\n  if (themeSwitcherBtn) {\n    themeSwitcherBtn.addEventListener('keydown', function (evt) {\n      if (evt.code) {\n        handleSwitcherBtnKeyboardCodes(evt.code.toString().toLowerCase());\n      }\n    });\n  }\n};\n\nvar themeSwitchOptionsKeydownEvt = function themeSwitchOptionsKeydownEvt() {\n  var items = document.querySelectorAll('.theme-switcher-list-item');\n  items.forEach(function (item, idx) {\n    item.addEventListener('keydown', function (evt) {\n      if (evt.code) {\n        handleThemeItemKeyboardCodes(evt.code.toString().toLowerCase(), idx);\n      }\n    });\n  });\n};\n\nvar onloadFns = function onloadFns() {\n  changeThemeEvt();\n  replaceLogo();\n  setTheme();\n  themeSwitcherBtnClickEvt();\n  themeSwitcherBtnKeydownEvt();\n  themeSwitchOptionsKeydownEvt();\n};\n\nmodule.exports = {\n  onloadFns: onloadFns,\n  closeThemeSwitcherIfClickedOutside: closeThemeSwitcherIfClickedOutside\n};\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"file":"scripts.js"}